{
    "openapi": "3.0.3",
    "info": {
        "title": "Finance App API",
        "description": "API documentation for the Finance App. This API allows users to manage users and transactions.",
        "version": "1.0.0"
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "description": "Create a new user with the given information",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_CREATED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "summary": "Login user",
                "description": "Login user with the given information",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_LOGGED_IN"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithToken"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password or email is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/refresh-token": {
            "post": {
                "summary": "Refresh User Tokens",
                "description": "Refresh user tokens",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMDE5YTVkNC1jNTc0LTQyMzYtODBjYS0wYWEzNTQwYzYwMWYiLCJpYXQiOjE3NTY3MzUzNTgsImV4cCI6MTc1NjczNjI1OH0.tdVwPpEcPcUintdvmmB_S_IUr9-Nx1e-gLHzJkIZIpA"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tokens generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tokens generated successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "TOKENS_GENERATED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Tokens"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/me/balance": {
            "get": {
                "summary": "Get a user balance",
                "description": "Get a user balance",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User balance found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User balance found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_BALANCE_FOUND"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserBalance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFoundResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/users/me": {
            "get": {
                "summary": "Get Authenticated User",
                "description": "Get authenticated user",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_FOUND"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update authenticated user",
                "description": "Update authenticated user",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_UPDATED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Authenticated User",
                "description": "Delete authenticated user",
                "tags": ["User"],

                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DELETED_USER"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/me": {
            "post": {
                "summary": "Create a New Transaction",
                "description": "Create a new transaction",
                "tags": ["Transaction"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "TRANSACTION_CREATED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all transactions by user id",
                "description": "Get all transactions by user id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "from",
                        "description": "The start date of the transactions (format: YYYY-MM-DD)",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-08-01"
                        }
                    },
                    {
                        "name": "to",
                        "description": "The end date of the transactions (format: YYYY-MM-DD)",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-08-08"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transactions found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "TRANSACTIONS_FOUND"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/me/{transactionId}": {
            "patch": {
                "summary": "Update a Transaction by Id",
                "description": "Update a transaction by id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The id of the transaction to update",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionParams"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction updated successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "TRANSACTION_UPDATED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a transaction by id",
                "description": "Delete a transaction by id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The id of the transaction to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction deleted successfully"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "TRANSACTION_DELETED"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionNotFoundResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter your accessToken"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    }
                }
            },
            "Tokens": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMDE5YTVkNC1jNTc0LTQyMzYtODBjYS0wYWEzNTQwYzYwMWYiLCJpYXQiOjE3NTY3MzUzNTgsImV4cCI6MTc1NjczNjI1OH0.tdVwPpEcPcUintdvmmB_S_IUr9-Nx1e-gLHzJkIZIpA"
                    },
                    "refreshToken": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0Mjg5NzA5NC03MmVkLTQ2NjctOWIwZS1lYTAwNzM3ZTQ2YjUiLCJpYXQiOjE3NTY4NDM2NDgsImV4cCI6MTc1NzQ0ODQ0OH0.5Ui_1f-9PC5gSw9uLJScSbRjclBS2QOcvc81APj4XDQ"
                    }
                }
            },
            "UserWithToken": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "tokens": {
                                "type": "object",
                                "properties": {
                                    "accessToken": {
                                        "type": "string",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMDE5YTVkNC1jNTc0LTQyMzYtODBjYS0wYWEzNTQwYzYwMWYiLCJpYXQiOjE3NTY3MzUzNTgsImV4cCI6MTc1NjczNjI1OH0.tdVwPpEcPcUintdvmmB_S_IUr9-Nx1e-gLHzJkIZIpA"
                                    },
                                    "refreshToken": {
                                        "type": "string",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMDE5YTVkNC1jNTc0LTQyMzYtODBjYS0wYWEzNTQwYzYwMWYiLCJpYXQiOjE3NTY3MzUzNTgsImV4cCI6MTc1NjczNjI1OH0.tdVwPpEcPcUintdvmmB_S_IUr9-Nx1e-gLHzJkIZIpA"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "LoginUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "token": {
                        "type": "string",
                        "example": "token"
                    }
                }
            },
            "UserBalance": {
                "type": "object",
                "properties": {
                    "earnings": {
                        "type": "string",
                        "example": "10000"
                    },
                    "expenses": {
                        "type": "string",
                        "example": "2000"
                    },
                    "investments": {
                        "type": "string",
                        "example": "2000"
                    },
                    "balance": {
                        "type": "string",
                        "example": "6000"
                    },
                    "earningsPercentage": {
                        "type": "number",
                        "example": 50
                    },
                    "expensesPercentage": {
                        "type": "number",
                        "example": 33.33
                    },
                    "investmentsPercentage": {
                        "type": "number",
                        "example": 16.67
                    }
                }
            },
            "CreateUserParams": {
                "type": "object",
                "required": ["firstName", "lastName", "email", "password"],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "John",
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe",
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password",
                        "minLength": 6
                    }
                }
            },
            "UpdateUserParams": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "John",
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe",
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@doe.com"
                    }
                }
            },
            "LoginUserParams": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password",
                        "minLength": 6
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "005ffce9-14d1-489c-b746-cab9c5efedd3"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "005ffce9-14d1-489c-b746-cab9c5efedd3"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["EXPENSE", "EARNING", "INVESTMENT"]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T21:19:00Z"
                    },
                    "amount": {
                        "type": "string",
                        "example": "33.33"
                    }
                }
            },
            "CreateTransactionParams": {
                "type": "object",
                "required": ["name", "type", "date", "amount"],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["EXPENSE", "EARNING", "INVESTMENT"]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T21:19:00Z",
                        "default": "2025-08-02T21:19:00Z"
                    },
                    "amount": {
                        "type": "number",
                        "example": 33.33
                    }
                }
            },
            "UpdateTransactionParams": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["EXPENSE", "EARNING", "INVESTMENT"]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T21:19:00Z",
                        "default": "2025-08-02T21:19:00Z"
                    },
                    "amount": {
                        "type": "number",
                        "example": 33.33
                    }
                }
            },
            "UserNotFoundResponse": {
                "type": "object",
                "format": "uuid",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "User not found"
                    },
                    "code": {
                        "type": "string",
                        "example": "NOT_FOUND"
                    }
                }
            },
            "TransactionNotFoundResponse": {
                "type": "object",
                "format": "uuid",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Transaction not found"
                    }
                }
            },
            "UnauthorizedResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "code": {
                        "type": "string",
                        "example": "UNAUTHORIZED"
                    }
                }
            },
            "InvalidParamResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Invalid param (this message depends on the param that is invalid)"
                    },
                    "code": {
                        "type": "string",
                        "example": "BAD_REQUEST"
                    }
                }
            },
            "InternalServerErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Internal server error"
                    },
                    "code": {
                        "type": "string",
                        "example": "INTERNAL_SERVER_ERROR"
                    }
                }
            },
            "UnauthorizedErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "code": {
                        "type": "string",
                        "example": "UNAUTHORIZED"
                    }
                }
            }
        }
    }
}
