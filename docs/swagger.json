{
    "openapi": "3.0.3",
    "info": {
        "title": "Finance App API",
        "description": "API documentation for the Finance App. This API allows users to manage users and transactions.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "description": "Create a new user with the given information",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Get a user by id",
                "description": "Get a user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a user by id",
                "description": "Delete a user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    }
                }
            },
            "uuid": {
                "type": "string",
                "format": "uuid",
                "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
            },
            "CreateUserParams": {
                "type": "object",
                "required": ["first_name", "last_name", "email", "password"],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John",
                        "minLength": 2
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe",
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password",
                        "minLength": 6
                    }
                }
            },
            "InvalidParamResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Invalid param (this message depends on the param that is invalid)"
                    },
                    "code": {
                        "type": "string",
                        "example": "BAD_REQUEST"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true,
                        "example": null
                    }
                }
            },
            "InternalServerErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Internal server error"
                    },
                    "code": {
                        "type": "string",
                        "example": "INTERNAL_SERVER_ERROR"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true,
                        "example": null
                    }
                }
            }
        }
    }
}
