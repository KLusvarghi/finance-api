{
    "openapi": "3.0.3",
    "info": {
        "title": "Finance App API",
        "description": "API documentation for the Finance App. This API allows users to manage users and transactions.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "description": "Create a new user with the given information",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userId}/balance": {
            "get": {
                "summary": "Get a user balance by user ID",
                "description": "Get a user balance by user ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to get the balance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBalance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Get a user by id",
                "description": "Get a user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a user by id",
                "description": "Delete a user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a user by id",
                "description": "Update a user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to update",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserParams"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "post": {
                "summary": "Create a new transaction",
                "description": "Create a new transaction",
                "tags": ["Transaction"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionParams"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all transactions by user id",
                "description": "Get all transactions by user id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The id of the user to get the transactions",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions/{transactionId}": {
          "patch": {
            "summary": "Update a transaction by id",
            "description": "Update a transaction by id",
            "tags": ["Transaction"],
            "parameters": [
              {
                "name": "transactionId",
                "description": "The id of the transaction to update",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateTransactionParams"
                  }
                }
              }
            },
            "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidParamResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
          }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    }
                }
            },
            "UserBalance": {
                "type": "object",
                "properties": {
                    "earnings": {
                        "type": "string",
                        "example": "10000"
                    },
                    "expenses": {
                        "type": "string",
                        "example": "2000"
                    },
                    "investments": {
                        "type": "string",
                        "example": "2000"
                    },
                    "balance": {
                        "type": "string",
                        "example": "6000"
                    }
                }
            },
            "CreateUserParams": {
                "type": "object",
                "required": ["first_name", "last_name", "email", "password"],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John",
                        "minLength": 2
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe",
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password",
                        "minLength": 6
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "005ffce9-14d1-489c-b746-cab9c5efedd3"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "005ffce9-14d1-489c-b746-cab9c5efedd3"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["EXPENSE", "EARNING", "INVESTMENT"]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T21:19:00Z"
                    },
                    "amount": {
                        "type": "string",
                        "example": "33.33"
                    }
                }
            },
            "CreateTransactionParams": {
                "type": "object",
                "required": ["name", "user_id", "type", "amount"],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "005ffce9-14d1-489c-b746-cab9c5efedd3"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["EXPENSE", "EARNING", "INVESTMENT"]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T21:19:00Z",
                        "default": "2025-08-02T21:19:00Z"
                    },
                    "amount": {
                        "type": "number",
                        "example": 33.33
                    }
                }
            },
            "InvalidParamResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Invalid param (this message depends on the param that is invalid)"
                    },
                    "code": {
                        "type": "string",
                        "example": "BAD_REQUEST"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true,
                        "example": null
                    }
                }
            },
            "InternalServerErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Internal server error"
                    },
                    "code": {
                        "type": "string",
                        "example": "INTERNAL_SERVER_ERROR"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true,
                        "example": null
                    }
                }
            }
        }
    }
}
